<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="data_item_preprocessing">
    <title>Предобработка значений элемента данных</title>
    <body>
        <p>Вкладка «Предобработка» позволяет задать правила преобразования полученных значений.
            Можно использовать одно или несколько правил предобработки до сохранения значений в базу
            данных. Преобразования выполняются в том порядке, в котором они были добавлены. Вся
            предобработка выполняется DATAPK ITM-K сервером.</p>
        <p>В параметрах предварительной обработки значений элементов данных поддерживаются
            пользовательские макросы и пользовательские макросы с контекстом.</p>
        
        <table id="table_w2h_tpt_frb" frame="all" rowsep="1" colsep="1">
            <title>Параметры предварительной обработки значений элементов данных</title>
            <tgroup cols="2">
                <colspec colnum="1" colname="col1" colwidth="1*"/>
                <colspec colnum="2" colname="col2" colwidth="2.8*"/>
                <thead>
                    <row>
                        <entry>Преобразование</entry>
                        <entry>Описание</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>Регулярное выражение</entry>
                        <entry>
                            <p>Совпадение значения с регулярным выражением &lt;шаблона> и замена
                                значения в соответствии с &lt;выводом>. Регулярное выражение
                                поддерживает извлечение до 10 захваченных групп в \N
                                последовательности. Элемент данных станет неподдерживаемым в случае
                                ошибки при поиске соответствия во входящем значении.</p>
                            <p>Параметры:</p>
                            <ul id="ul_x2h_tpt_frb">
                                <li><b>шаблон</b> – регулярное выражение;</li>
                                <li><b>вывод</b> – шаблон форматирования вывода. \N (где N=1..9) –
                                    управляющая последовательность заменяется N-нной совпадающей
                                    группой. Управляющая последовательность «\0» заменяется
                                    совпадающим текстом.</li>
                            </ul>
                        </entry>
                    </row>
                    <row>
                        <entry>Замена</entry>
                        <entry>
                            <p>Найти строку поиска и заменить ее другой (или пустотой). Все
                                совпадающие строки поиска будут заменены.</p>
                            <p>Параметры:</p>
                            <ul id="ul_y2h_tpt_frb">
                                <li><b>строка</b> поиска - строка для поиска и замены, с учетом
                                    регистра (обязательно);</li>
                                <li><b>замена</b> - строка для замены строки поиска. Строка замены
                                    также может быть пустой, что позволяет эффективно удалять строку
                                    поиска при ее обнаружении.</li>
                            </ul>
                            <p>Можно использовать управляющие последовательности для поиска или
                                замены разрывов строк, возврата каретки, табуляции и пробелов "\ n \
                                r \ t \ s "; обратную косую черту можно экранировать как "\\", а
                                управляющие последовательности можно экранировать как "\\n" .
                                Экранирование разрывов строк, возврата каретки, вкладок выполняется
                                автоматически при низкоуровневом обнаружении.</p>
                        </entry>
                    </row>
                    <row>
                        <entry>Обрезать</entry>
                        <entry>Удаление указанных символов с начала или конца значения.</entry>
                    </row>
                    <row>
                        <entry>Обрезать справа</entry>
                        <entry>Удаление указанных символов с конца значения.</entry>
                    </row>
                    <row>
                        <entry>Обрезать слева</entry>
                        <entry>Удаление указанных символов с начала значения.</entry>
                    </row>
                    <row>
                        <entry>XML XPath</entry>
                        <entry>
                            <p>Извлечение значения или фрагмента из XML данных с использованием
                                XPath функционала.</p>
                            <p>Чтобы эта опция заработала, DATAPK ITM-K сервер необходимо
                                скомпилировать с поддержкой libxml.</p>
                            <p>Примеры:</p>
                            <p><codeph>number(/document/item/value)</codeph> извлечет 10
                                    из<codeph>&lt;document>&lt;item>&lt;value>10&lt;/value>&lt;/item>&lt;/document></codeph></p>
                            <p><codeph>number(/document/item/@attribute)</codeph> извлечет 10 из
                                    <codeph>&lt;document>&lt;item
                                    attribute="10">&lt;/item>&lt;/document></codeph></p>
                            <p><codeph>/document/item</codeph> извлечет
                                    <codeph>&lt;item>&lt;value>10&lt;/value>&lt;/item></codeph>из<codeph>&lt;document>&lt;item>&lt;value>10&lt;/value>&lt;/item>&lt;/document></codeph></p>
                            <note type="attention">Пространства имен не поддерживаются.</note>
                        </entry>
                    </row>
                    <row>
                        <entry>JSONPath</entry>
                        <entry>
                            <p>Извлечение значения или фрагмента с JSON данных с использованием
                                простейшего набора функций JSONPath функционала.</p>
                            <p>Примеры:</p>
                            <p><codeph>$.document.item.value</codeph> извлечет 10 из
                                    <codeph>{"document":{"item":{"value": 10}}}</codeph></p>
                            <p><codeph>$.document.item</codeph> извлечет <codeph>{"value":
                                    10}</codeph> из <codeph>{"document":{"item":{"value":
                                    10}}}</codeph></p>
                            <p><codeph>$['a document'].item.value</codeph>извлечет 10 из<codeph>{"a
                                    document":{"item":{"value": 10}}}</codeph></p>
                            <p><codeph>$.document.items[1].value</codeph> извлечет 20
                                    из<codeph>{"document":{"items":[{"value": 10}, {"value":
                                    20}]}}</codeph></p>
                            <note type="attention">Поддерживаются только прямые пути к одиночным
                                объектам в обозначении точкой или квадратной скобкой. В JSONPath
                                обозначении точкой ($.a.b.c) можно использовать только
                                буквенно-цифровые символы + символ подчеркивания. Если имя объекта
                                JSON содержит другие символы, необходимо использовать обозначение
                                квадратной скобкой ($['a']['b']['c']). Допускается смешивание
                                обозначений ($.a['b'].c).<p>Извлечение нескольких значений не
                                    поддерживается.</p></note>
                        </entry>
                    </row>
                    <row>
                        <entry>CSV в JSON</entry>
                        <entry>Данные файла CSV конвертируются в формат JSON.</entry>
                    </row>
                    <row>
                        <entry>Пользовательский множитель</entry>
                        <entry>
                            <p>Умножение значения на заданное целое или дробное число.</p>
                            <p>Использование этой опции сконвертирует полученные значения в KB,
                                MBps, и т.д. в B, Bps. В противном случае DATAPK ITM-K не сможет
                                корректно подставить <xref
                                    href="https://www.zabbix.com/documentation/4.0/ru/manual/appendix/suffixes"
                                    format="html" scope="external">префиксы</xref> (K, M, G и
                                т.д.).</p>
                            <p>Также поддерживается научное представление. Например, 1e+70.</p>
                        </entry>
                    </row>
                    <row>
                        <entry>Простое изменение</entry>
                        <entry>
                            <p>Вычисление разницы между текущим и предыдущим значениями.</p>
                            <p>Вычисляется <b>значение-пред_значение</b>, где <b>значение</b> –
                                текущее значение; <b>пред_значение</b>– ранее полученное
                                значение.</p>
                            <p>Эта опция может быть полезной для измерения постоянно растущего
                                значения. Если текущее значение меньше предыдущего, тогда DATAPK
                                ITM-K отбрасывает это изменение (ничего не записывает) и ждет
                                следующего значения.</p>
                            <p>На один элемент данных разрешена только одна операция изменения.</p>
                        </entry>
                    </row>
                    <row>
                        <entry>Изменение в секунду</entry>
                        <entry>
                            <p>Вычисление изменения значения (разница между текущим и предыдущим
                                значениями) скорость в секунду.</p>
                            <p>Вычисляется
                                (<b>значение-пред_значение</b>)/(<b>время-пред_время</b>), где
                                    <b>значение</b> – текущее значение; <b>пред_значение</b> – ранее
                                полученное значение; <b>Время </b>– текущий штамп времени;
                                    <b>пред_значение</b> – штамп времени предыдущего значения.</p>
                            <p>Эта настройка крайне полезна при получении скорости в секунду в
                                случае постоянно увеличивающихся значений. Если текущее значение
                                меньше, чем предыдущее значение, DATAPK ITM-K отбрасывает эту
                                разницу (ничего не записывает) и ждет следующее значение. Такое
                                поведение помогает отрабатывать, например, переполнение 32-битных
                                счетчиков SNMP.</p>
                            <note type="attention">Так как результатом этого вычисления может быть
                                число с плавающей точкой, рекомендуется использовать тип информации
                                    <b>Числовой</b>(с плавающей точкой), даже если входящие значения
                                целые положительные числа. Это особенно актуально для маленьких
                                чисел, где дробная часть имеет значение. Если числа с плавающей
                                точкой очень большие и могут превысить длину поля, в этом случае
                                введенное значение может быть потеряно; в таком случае предлагается
                                использовать тип <b>Числовой</b> (целое положительное), и это
                                отбросит только дробную часть. <p>На один элемент данных разрешена
                                    только одна операция изменения.</p></note>
                        </entry>
                    </row>
                    <row>
                        <entry>Логичный в десятичный</entry>
                        <entry>Конвертация значения из логического в десятичный формат.</entry>
                    </row>
                    <row>
                        <entry>Восьмеричное в десятичное</entry>
                        <entry>Конвертация значения из восьмеричного в десятичный формат.</entry>
                    </row>
                    <row>
                        <entry>Шестнадцатеричное в десятичное</entry>
                        <entry>Конвертация значения из шестнадцатеричного в десятичный
                            формат.</entry>
                    </row>
                    <row>
                        <entry>JavaScript</entry>
                        <entry>Javascript предобработка выполняется с помощью вызова JavaScript
                            функции с одним параметром 'value' и заданным пользователем телом
                            функции. Результатом шага предобработки является значение, которое
                            возвращается из этой функции.</entry>
                    </row>
                    <row>
                        <entry>По диапазону</entry>
                        <entry>
                            <p>Диапазон, в котором должно находиться значение,
                                минимальное/максимальное значения (включительно).</p>
                            <p>Допускаются числовые значения (включая любое количество цифр,
                                опционально десятичную часть и экспоненциальную часть, отрицательные
                                значения). Можно использовать пользовательские макросы и
                                низкоуровневые макросы обнаружения. Минимальное значение должно быть
                                меньше максимального.</p>
                            <p>Должно существовать хотя бы одно значение.</p>
                        </entry>
                    </row>
                    <row>
                        <entry>Совпадение регулярному выражению</entry>
                        <entry>Регулярное выражение, которому должно соответствовать
                            значение.</entry>
                    </row>
                    <row>
                        <entry>Не совпадает с регулярным выражением</entry>
                        <entry>Регулярное выражение, которому значение не должно
                            соответствовать.</entry>
                    </row>
                    <row>
                        <entry>Проверка на ошибку в JSON</entry>
                        <entry>Проверяется, нет ли сообщения об ошибке на уровне приложения в
                            JSONpath.</entry>
                    </row>
                    <row>
                        <entry>Проверка на ошибку в XML</entry>
                        <entry>Проверяется, нет ли сообщения об ошибке на уровне приложения в
                            xpath.</entry>
                    </row>
                    <row>
                        <entry>Проверьте на ошибку при использовании регулярного выражения</entry>
                        <entry>Проверяется, нет ли сообщения об ошибке на уровне приложения в
                            регулярном выражении.</entry>
                    </row>
                    <row>
                        <entry>Проверка на неподдерживаемое значение</entry>
                        <entry>Отбросить неподдерживаемое значение или «задать значение в» или
                            задать ошибку.</entry>
                    </row>
                    <row>
                        <entry>Отбрасывать не изменившееся</entry>
                        <entry>Отбросить значение, если оно не изменилось.</entry>
                    </row>
                    <row>
                        <entry>Отбрасывать не изменившееся с периодическим контролем</entry>
                        <entry>Отбросить зачение, если оно не изменилось в течние определенного
                            периода (в секундах).</entry>
                    </row>
                    <row>
                        <entry>Шаблон Prometheus</entry>
                        <entry>Запрос для извлечения необходимых данных из метрик
                            Prometheus.</entry>
                    </row>
                    <row>
                        <entry>Prometheus в JSON</entry>
                        <entry>Преобразование метрик Prometheus в JSON.</entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
        <p>Если использовать пользовательский множитель или хранение значений, как изменение в
            секунду у элементов данных с типом информации «Числовой» (целое положительное) и
            результирующее вычисленное значение в действительности дробное число, тогда вычисленное
            значение все же будет считаться приемлемым, однако дробная часть будет обрезана и
            значение запишется как целое положительное.</p>
        <p><b>Кнопки диалога</b></p>
        <p>Кнопки в нижней части диалога позволяют выполнить несколько видов операций.</p>
      
        <table id="table_z2h_tpt_frb" frame="all" colsep="1" rowsep="1">
            <title>Кнопки диалога настройки элементов данных</title>
            <tgroup cols="2">
                <colspec colnum="1" colname="col1"/>
                <colspec colnum="2" colname="col2"/>
                <tbody>
                    <row>
                        <entry><image
                                conref="../../../reusable/buttons/add_button.dita#ReusableComponent_p5l_xxr_hrb/image_i3k_v5t_frb"
                                id="image_nxl_xxr_hrb"/></entry>
                        <entry>Добавление элемента данных. Эта кнопка доступна только для новых
                            элементов данных.</entry>
                    </row>
                    <row>
                        <entry><image
                                conref="../../../reusable/buttons/update_button.dita#ReusableComponent_e21_zxr_hrb/image_s4h_w5t_frb"
                                id="image_zg1_zxr_hrb"/></entry>
                        <entry>Обновление свойств элемента данных.</entry>
                    </row>
                    <row>
                        <entry><image
                                conref="../../../reusable/buttons/clone_button.dita#ReusableComponent_ppc_vzr_hrb/image_qq4_tzr_hrb"
                                id="image_osc_vzr_hrb"/></entry>
                        <entry>Создание другого элемента данных на основе свойств текущего элемента
                            данных.</entry>
                    </row>
                    <row>
                        <entry><image
                                conref="../../../reusable/buttons/execute_now_button.dita#ReusableComponent_en1_3yr_hrb/image_tb1_2vt_frb"
                                id="image_zp1_3yr_hrb"/></entry>
                        <entry>Выполнить получение данных элемента сейчас.</entry>
                    </row>
                    <row>
                        <entry><image
                                conref="../../../reusable/buttons/test_button.dita#ReusableComponent_rlw_jyr_hrb/image_yz4_jvt_frb"
                                id="image_rpw_jyr_hrb"/></entry>
                        <entry>Выполнение немедленной проверки нового значения элемента данных.
                            Поддерживается только для <b>пассивных</b> проверок (смотрите более
                                <xref href="https://www.zabbix.com/documentation/4.0/ru/manual/config/items/check_now" format="html" scope="external">детальную информацию</xref>).
                            Обратите внимание, что когда выполняется немедленная проверка значения,
                            кэш конфигурации не обновляется, поэтому значение не будет отражать
                            совсем недавние изменения настроек элемента данных.</entry>
                    </row>
                    <row>
                        <entry><image
                                conref="../../../reusable/buttons/clear_history_and_dynamics_button.dita#ReusableComponent_ldh_myr_hrb/image_tkz_lvt_frb"
                                id="image_ngh_myr_hrb"/></entry>
                        <entry>Удаление истории и динамики изменений элемента данных.</entry>
                    </row>
                    <row>
                        <entry><image
                                conref="../../../reusable/buttons/delete_button.dita#ReusableComponent_yzr_4yr_hrb/image_yw5_pvt_frb"
                                id="image_rcs_4yr_hrb"/></entry>
                        <entry>Удаление элемента данных.</entry>
                    </row>
                    <row>
                        <entry><image
                                conref="../../../reusable/buttons/undo_button.dita#ReusableComponent_e4k_qyr_hrb/image_jz3_qvt_frb"
                                id="image_trk_qyr_hrb"/></entry>
                        <entry>Отмена изменения свойств элемента данных.</entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
        <p><b>Ограничения текстовых данных</b></p>
        <p>Ограничения текстовых данных зависят от выбранной базы данных. Перед сохранением
            текстовых значений в базу данных эти значения обрезаются в соответствии с ограничением
            типа значений в базе данных.</p>
       
        <table id="table_afh_tpt_frb" frame="all" rowsep="1" colsep="1">
            <title>Ограничения текстовых данных для базы данных</title>
            <tgroup cols="4">
                <colspec colnum="1" colname="col1"/>
                <colspec colnum="2" colname="col2"/>
                <colspec colnum="3" colname="col3"/>
                <colspec colnum="4" colname="col4"/>
                <thead>
                    <row>
                        <entry morerows="1">База данных</entry>
                        <entry namest="col2" nameend="col4">Тип информации</entry>
                    </row>
                    <row>
                        <entry>Слово</entry>
                        <entry>Журнал (лог)</entry>
                        <entry>Текст</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>JatobaDB</entry>
                        <entry>255 символов</entry>
                        <entry>65536 символов</entry>
                        <entry>65536 символов</entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
        <p><b>Черный список единиц измерения</b></p>
        <p>По умолчанию, указывая единицу измерения элементу данных, можно увидеть добавленный
            префикс множителя – например, значение 2048 с единицей измерения B будет отображаться
            как 2KB.</p>
        <p>Однако, используя префикс «!», можно избежать конвертации любой единицы измерения,
            например !B. Чтобы лучше проиллюстрировать то, каким образом это преобразование работает
            с и без черного списка, просмотрите следующие примеры значений и единиц измерения:</p>
        <ul id="ul_bfh_tpt_frb">
            <li><codeph>1024 !B → 1024 B</codeph></li>
            <li><codeph>1024 B → 1 KB</codeph></li>
            <li><codeph>61 !s → 61 s</codeph></li>
            <li><codeph>61 s → 1m 1s</codeph></li>
            <li><codeph>0 !uptime → 0 uptime</codeph></li>
            <li><codeph>0 uptime → 00:00:00</codeph></li>
            <li><codeph>0 !! → 0 !</codeph></li>
            <li><codeph>0 ! → 0</codeph></li>
        </ul>
        <p>Правильным способом внесения единиц измерения в черный список будет !ms, !rpm, !RPM,
            !%.</p>
    </body>
</topic>
