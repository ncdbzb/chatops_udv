version: '3.8'
services:
  db:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7.0.11-alpine
    env_file:
      - .env
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}

  fastapi:
    build:
      context: ./fast_api
      dockerfile: Dockerfile.fast_api
    env_file:
      - .env
    container_name: fastapi_app
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      - db
      - gigachat_api
      - redis

  gigachat_api:
    build:
      context: ./gigachat_api
      dockerfile: Dockerfile.gigachat_api
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
    restart: always
    env_file:
      - ./gigachat_api/.env
    container_name: gigachat_api
    ports:
      - "8080:8080"
    volumes:
      - ./gigachat_api/gigachatAPI/data:/chatops_udv/gigachat_api/gigachatAPI/data/

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pg_admin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:  
      - "8888:80"
    restart: always

  flower:
    image: mher/flower:latest
    container_name: flower
    env_file:
      - .env
    ports:
      - "5555:5555"
    command: celery --broker=redis://redis:${REDIS_PORT}/0 flower --port=5555
    depends_on:
      - redis
      - fastapi

  react:
    build:
      context: ./react
      dockerfile: Dockerfile.react
    container_name: react
    env_file:
      - ./react/.env
    ports:
      - "443:443"
    restart: always
    depends_on:
      - fastapi

volumes:
  pgdata:
